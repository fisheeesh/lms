import { HTTPSchema, AwsSchema, CrowdStrikeSchema, M365Schema, AdSchema } from "./validators"

export const LOGIN = "Login"
export const REGISTER = "Register"

export const LOGIN_TITLE = "Login to your account"
export const LOGIN_SUBTITLE = "Enter your email address below to login to your account"

export const REGISTER_TITLE = "Create your account"
export const REGISTER_SUBTITLE = "Enter your email address below to create your account"

export const IMG_URL = import.meta.env.VITE_IMG_URL

export const APP_NAME = "Logs Management System"

export const NAVLINKS = [
    { to: "/", name: "Logs Dashboard" },
    { to: "/management", name: "Management" },
]

export const LOG_SOURCES = [
    "FIREWALL",
    "API",
    "CROWDSTRIKE",
    "AWS",
    "M365",
    "AD",
    "NETWORK",
] as const

export const ACTIONS = [
    "ALLOW",
    "DENY",
    "CREATE",
    "DELETE",
    "LOGIN",
    "LOGOUT",
    "ALERT",
] as const

export const schemas = {
    http: HTTPSchema,
    aws: AwsSchema,
    crowdstrike: CrowdStrikeSchema,
    m365: M365Schema,
    ad: AdSchema,
} as const

export const defaults = {
    http: {
        tenant: "demoTenant",
        source: "API",
        action: "ALERT",
        severity: 5,
        eventType: "LoginAttempt",
        user: "john.doe",
        ip: "127.0.0.1",
        reason: "Testing default API log",
    },
    crowdstrike: {
        tenant: "demoTenant",
        source: "CROWDSTRIKE",
        action: "ALERT",
        severity: 8,
        event_type: "malware_detected",
        host: "WIN10-01",
        process: "powershell.exe",
        sha256: "abc123def456",
    },
    aws: {
        tenant: "demoTenant",
        source: "AWS",
        action: "ALERT",
        severity: 4,
        event_type: "CreateUser",
        user: "admin",
    },
    m365: {
        tenant: "demoTenant",
        source: "M365",
        action: "ALERT",
        severity: 3,
        event_type: "UserLoggedIn",
        user: "bob@demo.local",
        ip: "198.51.100.23",
        status: "Success",
        workload: "Exchange",
    },
    ad: {
        tenant: "demoTenant",
        source: "AD",
        action: "ALERT",
        severity: 6,
        event_id: 4625,
        event_type: "LogonFailed",
        user: "demo\\eve",
        host: "DC01",
        ip: "203.0.113.77",
        logon_type: 3,
    },
} as const

export const TSFILTER = [
    { name: 'Last 7 days', value: "7" },
    { name: "Last 30 days", value: "30" },
]

export const SOURCEFILTER = [
    { name: "All Sources", value: "all" },
    { name: "Firewall", value: "FIREWALL" },
    { name: "API", value: "API" },
    { name: "CrowdStrike", value: "CROWDSTRIKE" },
    { name: "AWS", value: "AWS" },
    { name: "Microsoft 365", value: "M365" },
    { name: "Active Directory", value: "AD" },
    { name: "Network", value: "NETWORK" },
]

export const SEVERITYFILTER = [
    { name: "All Severities", value: "all" },
    { name: "Info", value: "info" },
    { name: "Warn", value: "warn" },
    { name: "Error", value: "error" },
    { name: "Critical", value: "critical" },
]

export const ACTIONFILTER = [
    { name: "All Actions", value: "all" },
    { name: "Allow", value: "ALLOW" },
    { name: "Deny", value: "DENY" },
    { name: "Create", value: "CREATE" },
    { name: "Delete", value: "DELETE" },
    { name: "Login", value: "LOGIN" },
    { name: "Logout", value: "LOGOUT" },
    { name: "Alert", value: "ALERT" },
]

export const TENANTFILTER = [
    { name: "All Tenants", value: "all" },
    { name: "tenantA", value: "tenantA" },
    { name: "tenantB", value: "tenantB" },
    { name: "tenantC", value: "tenantC" }
]

export const dummyLogs = [
    {
        id: 1,
        ts: new Date("2024-09-10T10:15:00Z"),
        tenant: "companyA",
        source: "FIREWALL",
        vendor: "Palo Alto",
        product: "PA-220",
        eventType: "traffic",
        eventSubtype: "allowed",
        severity: 2,
        action: "ALLOW",
        user: "alice",
        host: "host-01",
        process: "chrome.exe",
        src_ip: "192.168.1.10",
        src_port: "54321",
        dst_ip: "172.16.0.5",
        dst_port: "443",
        protocol: "TCP",
        url: "https://example.com/login",
        http_method: "POST",
        status_code: 200,
        rule_name: "Allow-HTTPS",
        rule_id: "1001",
        ip: "203.0.113.25",
        reason: "Matched policy",
        cloud_account_id: "acc-123",
        cloud_region: "us-east-1",
        cloud_service: "EC2",
        raw: { packet: "..." },
        tags: ["network", "web"],
        createdAt: new Date(),
        updatedAt: new Date(),
    },
    {
        id: 2,
        ts: new Date("2024-09-10T10:17:00Z"),
        tenant: "companyA",
        source: "IDS",
        vendor: "Snort",
        product: "Snort-3",
        eventType: "intrusion",
        eventSubtype: "SQL Injection",
        severity: 4,
        action: "BLOCK",
        user: null,
        host: "web-server-01",
        process: "apache2",
        src_ip: "203.0.113.50",
        src_port: "60001",
        dst_ip: "172.16.0.10",
        dst_port: "80",
        protocol: "TCP",
        url: "http://example.com/search?q=test",
        http_method: "GET",
        status_code: 403,
        rule_name: "SQLi-Block",
        rule_id: "2005",
        ip: "203.0.113.50",
        reason: "Detected SQL injection attempt",
        cloud_account_id: "acc-456",
        cloud_region: "ap-southeast-1",
        cloud_service: "CloudFront",
        raw: { payload: "..." },
        tags: ["security", "attack"],
        createdAt: new Date(),
        updatedAt: new Date(),
    },
    {
        id: 3,
        ts: new Date("2024-09-10T11:00:00Z"),
        tenant: "companyB",
        source: "ENDPOINT",
        vendor: "Microsoft",
        product: "Defender",
        eventType: "malware",
        eventSubtype: "Trojan",
        severity: 5,
        action: "QUARANTINE",
        user: "bob",
        host: "laptop-22",
        process: "unknown.exe",
        src_ip: "192.168.2.15",
        src_port: "52000",
        dst_ip: "45.33.32.156",
        dst_port: "8080",
        protocol: "TCP",
        url: null,
        http_method: null,
        status_code: null,
        rule_name: "Trojan-Detection",
        rule_id: "3002",
        ip: "45.33.32.156",
        reason: "Malware signature match",
        cloud_account_id: null,
        cloud_region: null,
        cloud_service: null,
        raw: { fileHash: "abcd1234" },
        tags: ["malware", "endpoint"],
        createdAt: new Date(),
        updatedAt: new Date(),
    },
    {
        id: 4,
        ts: new Date("2024-09-10T11:05:00Z"),
        tenant: "companyC",
        source: "CLOUD",
        vendor: "AWS",
        product: "IAM",
        eventType: "auth",
        eventSubtype: "login-failure",
        severity: 3,
        action: "DENY",
        user: "charlie",
        host: "console.aws.amazon.com",
        process: null,
        src_ip: "198.51.100.10",
        src_port: "34000",
        dst_ip: null,
        dst_port: null,
        protocol: "HTTPS",
        url: "https://signin.aws.amazon.com",
        http_method: "POST",
        status_code: 401,
        rule_name: "MFA-Required",
        rule_id: "4001",
        ip: "198.51.100.10",
        reason: "MFA not provided",
        cloud_account_id: "acc-789",
        cloud_region: "eu-west-1",
        cloud_service: "IAM",
        raw: { auth: "failed" },
        tags: ["auth", "cloud"],
        createdAt: new Date(),
        updatedAt: new Date(),
    },
    {
        id: 5,
        ts: new Date("2024-09-10T11:15:00Z"),
        tenant: "companyA",
        source: "PROXY",
        vendor: "Squid",
        product: "Squid 4",
        eventType: "web",
        eventSubtype: "access",
        severity: 1,
        action: "ALLOW",
        user: "david",
        host: "proxy-01",
        process: null,
        src_ip: "192.168.1.45",
        src_port: "50010",
        dst_ip: "93.184.216.34",
        dst_port: "443",
        protocol: "HTTPS",
        url: "https://www.google.com",
        http_method: "GET",
        status_code: 200,
        rule_name: "Allow-Web",
        rule_id: "5001",
        ip: "192.168.1.45",
        reason: "Policy match",
        cloud_account_id: null,
        cloud_region: null,
        cloud_service: null,
        raw: { responseTime: "120ms" },
        tags: ["web", "proxy"],
        createdAt: new Date(),
        updatedAt: new Date(),
    },
    {
        id: 6,
        ts: new Date("2024-09-10T12:00:00Z"),
        tenant: "companyB",
        source: "FIREWALL",
        vendor: "Cisco",
        product: "ASA",
        eventType: "traffic",
        eventSubtype: "denied",
        severity: 2,
        action: "BLOCK",
        user: null,
        host: "fw-01",
        process: null,
        src_ip: "10.0.0.5",
        src_port: "33333",
        dst_ip: "203.0.113.77",
        dst_port: "22",
        protocol: "TCP",
        url: null,
        http_method: null,
        status_code: null,
        rule_name: "Deny-SSH",
        rule_id: "6001",
        ip: "10.0.0.5",
        reason: "Unauthorized access",
        cloud_account_id: null,
        cloud_region: null,
        cloud_service: null,
        raw: { connection: "dropped" },
        tags: ["network", "firewall"],
        createdAt: new Date(),
        updatedAt: new Date(),
    },
    {
        id: 7,
        ts: new Date("2024-09-10T12:30:00Z"),
        tenant: "companyC",
        source: "APP",
        vendor: "Nginx",
        product: "WebServer",
        eventType: "error",
        eventSubtype: "500",
        severity: 3,
        action: "ERROR",
        user: null,
        host: "web-02",
        process: "nginx",
        src_ip: "203.0.113.88",
        src_port: "54000",
        dst_ip: "172.16.0.20",
        dst_port: "443",
        protocol: "HTTPS",
        url: "https://api.example.com/data",
        http_method: "GET",
        status_code: 500,
        rule_name: "Server-Error",
        rule_id: "7001",
        ip: "203.0.113.88",
        reason: "Internal Server Error",
        cloud_account_id: null,
        cloud_region: null,
        cloud_service: null,
        raw: { error: "NullPointerException" },
        tags: ["app", "error"],
        createdAt: new Date(),
        updatedAt: new Date(),
    },
    {
        id: 8,
        ts: new Date("2024-09-10T12:45:00Z"),
        tenant: "companyA",
        source: "CLOUD",
        vendor: "GCP",
        product: "Compute Engine",
        eventType: "vm",
        eventSubtype: "start",
        severity: 1,
        action: "ALLOW",
        user: "admin",
        host: "gce-instance-1",
        process: null,
        src_ip: null,
        src_port: null,
        dst_ip: null,
        dst_port: null,
        protocol: null,
        url: null,
        http_method: null,
        status_code: null,
        rule_name: "Start-VM",
        rule_id: "8001",
        ip: "34.120.0.1",
        reason: "User initiated",
        cloud_account_id: "acc-321",
        cloud_region: "us-central1",
        cloud_service: "Compute Engine",
        raw: { action: "startVM" },
        tags: ["cloud", "vm"],
        createdAt: new Date(),
        updatedAt: new Date(),
    },
    {
        id: 9,
        ts: new Date("2024-09-10T13:00:00Z"),
        tenant: "companyB",
        source: "APP",
        vendor: "PostgreSQL",
        product: "Database",
        eventType: "query",
        eventSubtype: "slow",
        severity: 2,
        action: "WARN",
        user: "reporting-user",
        host: "db-01",
        process: "postgres",
        src_ip: "192.168.3.20",
        src_port: "51000",
        dst_ip: null,
        dst_port: null,
        protocol: null,
        url: null,
        http_method: null,
        status_code: null,
        rule_name: "Slow-Query",
        rule_id: "9001",
        ip: "192.168.3.20",
        reason: "Execution > 5s",
        cloud_account_id: null,
        cloud_region: null,
        cloud_service: null,
        raw: { query: "SELECT * FROM orders" },
        tags: ["db", "performance"],
        createdAt: new Date(),
        updatedAt: new Date(),
    },
    {
        id: 10,
        ts: new Date("2024-09-10T13:15:00Z"),
        tenant: "companyC",
        source: "PROXY",
        vendor: "Zscaler",
        product: "ZIA",
        eventType: "web",
        eventSubtype: "blocked",
        severity: 3,
        action: "BLOCK",
        user: "eve",
        host: "proxy-02",
        process: null,
        src_ip: "192.168.4.15",
        src_port: "52345",
        dst_ip: "104.244.42.1",
        dst_port: "80",
        protocol: "HTTP",
        url: "http://malicious-site.com",
        http_method: "GET",
        status_code: 403,
        rule_name: "Block-Malware-Sites",
        rule_id: "10010",
        ip: "192.168.4.15",
        reason: "Blacklist",
        cloud_account_id: null,
        cloud_region: null,
        cloud_service: null,
        raw: { category: "malware" },
        tags: ["proxy", "security"],
        createdAt: new Date(),
        updatedAt: new Date(),
    },
]

export const dummyUsers = [
    {
        name: "Alice Johnson",
        email: "alice.johnson@example.com",
        tenant: "CompanyA",
        role: "Admin",
        status: "Active",
    },
    {
        name: "Bob Smith",
        email: "bob.smith@example.com",
        tenant: "CompanyB",
        role: "User",
        status: "Inactive",
    },
    {
        name: "Charlie Brown",
        email: "charlie.brown@example.com",
        tenant: "CompanyA",
        role: "Manager",
        status: "Active",
    },
    {
        name: "Diana Prince",
        email: "diana.prince@example.com",
        tenant: "CompanyC",
        role: "User",
        status: "Pending",
    },
    {
        name: "Ethan Hunt",
        email: "ethan.hunt@example.com",
        tenant: "CompanyB",
        role: "Admin",
        status: "Active",
    },
    {
        name: "Fiona Gallagher",
        email: "fiona.gallagher@example.com",
        tenant: "CompanyC",
        role: "User",
        status: "Suspended",
    },
    {
        name: "George Miller",
        email: "george.miller@example.com",
        tenant: "CompanyA",
        role: "User",
        status: "Active",
    },
    {
        name: "Hannah Lee",
        email: "hannah.lee@example.com",
        tenant: "CompanyD",
        role: "Manager",
        status: "Active",
    },
    {
        name: "Ivan Petrov",
        email: "ivan.petrov@example.com",
        tenant: "CompanyB",
        role: "User",
        status: "Inactive",
    },
    {
        name: "Julia Roberts",
        email: "julia.roberts@example.com",
        tenant: "CompanyD",
        role: "Admin",
        status: "Active",
    },
]
